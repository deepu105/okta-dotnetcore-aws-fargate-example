@page

<div id="chatApp">
    <div class="container">
        <div class="row">
            <div class="col-2">Message</div>
            <div class="col-4">
                <input type="text" v-model="message" id="message" />
                <input type="button" v-on:click.stop.prevent="sendMessage" id="sendButton" value="Send Message" />
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            <hr />
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <ul id="messagesList">
                <li v-for="(item, index) in chatLog" :key="index">
                    {{ item.User }} - {{ item.Message }}
                </li>
            </ul>
        </div>
    </div>
</div>
<script src="~/js/signalr/dist/browser/signalr.js"></script>
<script src="https://unpkg.com/vue/dist/vue.min.js"></script>
<script>
    var connection = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();

    document.addEventListener('DOMContentLoaded', function () {
        new Vue({
            el: '#chatApp',
            data: {
                isConnected: false,
                message: "",
                chatLog: []
            },
            created: function () {
                var vm = this;
                connection
                    .on("ReceiveMessage", function (user, message) {
                        vm.recieveMessage(user, message);
                    });

                connection
                    .start()
                    .then(function () {
                        vm.isConnected = true;
                    })
                    .catch(function (err) {
                        return console.error(err.toString());
                    });

            },
            methods: {
                recieveMessage: function (user, message) {
                    this.chatLog.push({
                        User: user,
                        Message: message
                    })
                },
                sendMessage: function () {
                    var vm = this;
                    connection
                        .invoke("SendMessage", vm.message)
                        .then(function () { vm.message = "" })
                        .catch(function (err) {
                            return console.error(err.toString());
                        });
                }
            }
        })
    })
</script>